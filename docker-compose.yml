services:
  metabase:
    image: metabase/metabase-enterprise:v1.55.x
    environment:
      MB_CONFIG_FILE_PATH: /app/config.yml
      MB_JETTY_PORT: "${MB_PORT}"
      MB_EDITION: "ee"
      MB_SITE_URL: "http://localhost:${MB_PORT}/"
      MB_JWT_SHARED_SECRET: "${METABASE_JWT_SHARED_SECRET}"
      MB_SETUP_TOKEN: "${PREMIUM_EMBEDDING_TOKEN}"
      MB_PREMIUM_EMBEDDING_TOKEN: "${PREMIUM_EMBEDDING_TOKEN}"
      MB_RUN_MODE: "${MB_RUN_MODE}"
      METASTORE_DEV_SERVER_URL: "${METASTORE_DEV_SERVER_URL}"
      MB_JWT_IDENTITY_PROVIDER_URI: "http://localhost:${AUTH_PROVIDER_PORT}/sso/metabase"
    healthcheck:
      test: curl --fail -X GET -I "http://localhost:${MB_PORT}/api/health" || exit 1
      interval: 15s
      timeout: 5s
      retries: 10
    ports:
      - "${MB_PORT}:${MB_PORT}"
    volumes:
      - ./metabase/config.yml:/app/config.yml

  client:
    depends_on:
      metabase:
        condition: service_healthy
      server:
        condition: service_started
    build:
      context: .
      dockerfile: ./client/Dockerfile
      args:
        VITE_METABASE_INSTANCE_URL: "http://localhost:${MB_PORT}"
        WATCH: "${WATCH}"
    environment:
      CLIENT_PORT: "${CLIENT_PORT}"
      VITE_METABASE_INSTANCE_URL: "http://localhost:${MB_PORT}"
    healthcheck:
      test: curl --fail -X GET -I "http://localhost:${CLIENT_PORT}/" || exit 1
      interval: 2s
      timeout: 2s
      retries: 5
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"
    volumes:
      - ./client/src:/app/client/src

  server:
    depends_on:
      metabase:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./server/Dockerfile
    environment:
      AUTH_PROVIDER_PORT: "${AUTH_PROVIDER_PORT}"
      METABASE_INSTANCE_URL: "http://metabase:${MB_PORT}"
      METABASE_JWT_SHARED_SECRET: "${METABASE_JWT_SHARED_SECRET}"
    ports:
      - "${AUTH_PROVIDER_PORT}:${AUTH_PROVIDER_PORT}"
